name: Code Review Automation

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [ main, master, develop ]

jobs:
  code-quality:
    name: Code Quality Analysis
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
    
    - name: Install dependencies
      run: npm install
    
    - name: Install code quality tools
      run: npm install --save-dev eslint prettier
      continue-on-error: true
    
    - name: Run ESLint
      run: npx eslint . --ext .js || echo "ESLint found issues"
      continue-on-error: true
    
    - name: Run Prettier check
      run: npx prettier --check "**/*.{js,json,md}" || echo "Formatting issues found"
      continue-on-error: true

  security-scan:
    name: Security Vulnerability Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
    
    - name: Install dependencies
      run: npm install
    
    - name: Run npm audit
      run: npm audit --json > security-audit.json || true
      continue-on-error: true
    
    - name: Upload security reports
      uses: actions/upload-artifact@v4
      with:
        name: security-scan-reports
        path: security-audit.json
        retention-days: 90

  pr-size-check:
    name: Pull Request Size Check
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    
    steps:
    - name: Check PR size
      uses: actions/github-script@v7
      with:
        script: |
          const pr = context.payload.pull_request;
          const additions = pr.additions;
          const deletions = pr.deletions;
          const changes = additions + deletions;
          
          let label = '';
          if (changes < 50) label = 'size/XS';
          else if (changes < 200) label = 'size/S';
          else if (changes < 500) label = 'size/M';
          else if (changes < 1000) label = 'size/L';
          else label = 'size/XL';
          
          console.log(`PR size: ${changes} changes - Label: ${label}`);

  review-checklist:
    name: Review Checklist
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    
    steps:
    - name: Post review checklist
      uses: actions/github-script@v7
      with:
        script: |
          const checklist = `
          ## Code Review Checklist
          
          ### Functionality
          - [ ] Code accomplishes the intended purpose
          - [ ] Edge cases are handled appropriately
          
          ### Code Quality
          - [ ] Code is readable and maintainable
          - [ ] No code duplication
          
          ### Testing
          - [ ] Tests are included (if applicable)
          - [ ] All tests pass
          
          ### Security
          - [ ] No security vulnerabilities introduced
          - [ ] Input validation is present
          `;
          
          const { data: comments } = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
          });
          
          const checklistExists = comments.some(comment => 
            comment.body.includes('Code Review Checklist')
          );
          
          if (!checklistExists) {
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: checklist
            });
          }
