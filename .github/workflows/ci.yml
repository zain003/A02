name: Continuous Integration

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    name: Test on Node.js ${{ matrix.node-version }}
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run application test
      run: node run.js
      continue-on-error: true
      timeout-minutes: 5
    
    - name: Check for syntax errors
      run: node -c run.js
    
    - name: Verify package.json
      run: npm ls --depth=0

  lint:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install ESLint
      run: npm install --save-dev eslint
    
    - name: Run ESLint
      run: npx eslint . --ext .js --max-warnings 0 || echo "ESLint check completed with warnings"
      continue-on-error: true
    
    - name: Check code formatting
      run: |
        npm install --save-dev prettier
        npx prettier --check "**/*.{js,json,md}" || echo "Formatting check completed"
      continue-on-error: true

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Run npm audit
      run: npm audit --audit-level=moderate
      continue-on-error: true
    
    - name: Check for vulnerabilities
      run: |
        npm install
        npm audit fix --dry-run || echo "Security audit completed"

  build-status:
    name: CI Status Check
    runs-on: ubuntu-latest
    needs: [test, lint, security]
    if: always()
    
    steps:
    - name: Check CI results
      run: |
        echo "Test job status: ${{ needs.test.result }}"
        echo "Lint job status: ${{ needs.lint.result }}"
        echo "Security job status: ${{ needs.security.result }}"
        if [ "${{ needs.test.result }}" == "failure" ]; then
          echo "❌ Tests failed"
          exit 1
        fi
        echo "✅ CI checks completed successfully"
